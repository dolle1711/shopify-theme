{%- liquid

  assign loading = "lazy"
  assign decoding ="async"
  assign fetchpriority = "auto"

  if section.index == 1
    assign loading = "eager"
    assign fetchpriority = "high"
  endif

  assign animation_one_cls = 'js-animate anm anm-fadeInUp'
  assign animation_two_cls = 'js-animate anm'

  if section.index == 1
    assign animation_one_cls = ''
    assign animation_two_cls = ''
  endif

  assign desktop_background_image = 'lifestyle-1' | placeholder_svg_tag: 'js-image-lazy placeholder d-none d-block-sm w-100 h-100 of-cover'
  assign mobile_background_image = 'lifestyle-1' | placeholder_svg_tag: 'js-image-lazy-mobile placeholder d-none-sm d-block w-100 h-100 of-cover'

  assign desktop_background_image_alt  = section.settings.desktop_background_image.alt | default: section.settings.desktop_background_image.image | split: '/' | last
  assign desktop_background_image = section.settings.desktop_background_image | image_url: width: section.settings.desktop_background_image.width | image_tag: widths: '320, 450, 550, 750, 950, 1024, 1200, 1400, 1600, 1800, 2000, 2200, 2400, 2600, 2800, 3000', sizes: "100vw", alt: desktop_background_image_alt, class: 'js-image-lazy d-none d-block-sm w-100 h-100 of-cover', loading: loading, fetchpriority: fetchpriority, decoding: decoding

  assign mobile_background_image_alt  = section.settings.mobile_background_image.alt | default: section.settings.mobile_background_image.image | split: '/' | last
  assign mobile_background_image = section.settings.mobile_background_image | image_url: width: section.settings.mobile_background_image.width | image_tag: widths: '320, 450, 550, 750, 950, 1024, 1200', sizes: "100vw", alt: mobile_background_image_alt, class: 'js-image-lazy-mobile d-none-sm d-block w-100 h-100 of-cover', loading: loading, fetchpriority: fetchpriority, decoding: decoding

  if section.settings.mobile_background_image == blank
    assign desktop_background_image = desktop_background_image | replace: 'd-none d-block-sm', ''
  endif

  assign min_height_mobile = section.settings.height_mobile
  assign min_height_desktop = section.settings.height_desktop
  if min_height_desktop == "adapt_img"
    assign min_height_desktop = ""
    if section.settings.desktop_background_image == blank
      assign height_desktop = "400px"
    endif
    assign height_desktop = 100 | divided_by : section.settings.desktop_background_image.aspect_ratio | append: 'vw'
  endif
  if min_height_mobile == "adapt_img"
    assign min_height_mobile = ""
    assign height_mobile = 100 | divided_by : section.settings.mobile_background_image.aspect_ratio | append: 'vw'
    if section.settings.mobile_background_image == blank
      assign height_mobile = 100 | divided_by : section.settings.desktop_background_image.aspect_ratio | append: 'vw'
    endif
    if section.settings.mobile_background_image == blank and section.settings.desktop_background_image == blank
      assign height_mobile = "400px"
    endif
  endif

  assign content_align = section.blocks[0].settings.content_position
  if content_align contains 'ta-center'
    assign content_align_class = ' clm ta-center m-auto p-zero'
    assign description_class = ' m-sides'
  elsif content_align contains 'ta-left'
    assign content_align_class = ' clm p-zero'
  else
    assign description_class = ' '
  endif

  if min_height_desktop == "30"
    assign s_header_style = 'd-flex-md middle-md'
    assign content_align_class = 'ta-left-md'
    if content_align contains 'ta-center'
      assign description_class = 'm-sides-xs'
    endif
    assign content_position = 'content_position--special'
  endif

  unless section.settings.section_mask_overlay_color.alpha == 0.0 or section.settings.section_mask_overlay_color == blank
    assign overlay_color =  '--color-page-bg-rgb:' | append: section.settings.section_mask_overlay_color.red | append: ',' | append: section.settings.section_mask_overlay_color.green | append: ',' | append: section.settings.section_mask_overlay_color.blue
  endunless
  unless section.settings.section_content_overlay_color.alpha == 0.0 or section.settings.section_content_overlay_color == blank
    assign content_color =  'color:' | append: section.settings.section_content_overlay_color
  endunless
-%}
<div class="p-relative o-hidden color-{{- section.settings.color_scheme }} {% render 'animation-loader', section: section %}" data-ui-component="Image Banner Section" style="--mh-xs: {{- min_height_mobile -}}vh;--mh-sm: {{- min_height_desktop -}}vh;--h-xs: {{- height_mobile -}};--h-sm: {{- height_desktop -}};" role="region" aria-labelledby="sectionHeading-{{ section.id | md5 | truncate: 12, "" }}">
  <div class="sht-mask p-absolute w-100 h-100 o-hidden" style="--overlay: {{ section.settings.section_overlay_opacity }}; {{ overlay_color }}">
      <div class="d-block w-100 h-100 js-animate anm anm-zoomOut media-wrapper">
        {%- liquid
          echo desktop_background_image
          if section.settings.mobile_background_image
            echo mobile_background_image
          endif
        -%}
      </div>
  </div>
  <div class="ctnr zi-1 w-100 h-100 p-relative d-flex fd-column content--special {{ content_align }} {{ content_position }} " style="--mh-xs: {{- min_height_mobile -}}vh;--h-xs: {{- height_mobile -}};--mh-sm: {{- min_height_desktop -}}vh;--h-sm: {{- height_desktop -}}; ">
    <div class="w-100" style="{{ content_color }}">
      {% assign heading_style = section.settings.enable_large_heading | default: '' | replace: 'true', 'headline' %}
      {%- unless section.blocks[0].settings.subheading == blank and section.blocks[0].settings.heading == blank and section.blocks[0].settings.description == blank -%}
        <div class="s-header pb-0 {{ s_header_style }}">
          {% if section.settings.badge_text != blank %}
            <sht-shape-parallax class="d-block p-relative p-badge-wrap" data-enable-parallax-scrolling="{{ settings.enable_parallax_scrolling_prominent_badge }}" data-content-transform="rotate(-4deg) translate(-50%, -50%)">
              <div class="js-shape-parallax-shape {{ section.settings.badge_position }} p-absolute zi-2 o-hidden">
                <div class="js-shape-parallax-rotation p-badge {{ section.settings.badge_shape }} {{ section.settings.badge_color }}">
                  <span class="js-shape-parallax-content p-badge__content h6 ta-center p-absolute center-middle">{{ section.settings.badge_text }}</span>
                </div>
              </div>
            </sht-shape-parallax>
          {% endif %}
          <div class="s-header__content {{ content_align_class }} wb-break-word" {% if content_align contains 'ta-' %}style="--w-md:8"{% endif %}>
            <div class="s-header__sub hide-empty d-inline-block tt-up {{ settings.subheading_style }} {{ animation_one_cls }}" style="--duration: .6s;">{{- section.blocks[0].settings.subheading | escape -}}</div>
            <h2 id="sectionHeading-{{ section.id | md5 | truncate: 12, "" }}" class="s-header__title mb-0 wb-break-word hide-empty {{ heading_style }} {{ animation_one_cls }}" style="--duration: .6s; --delay: .3s">{{- section.blocks[0].settings.heading | escape -}}</h2>
            <div class="s-header-content hide-empty {{ animation_two_cls }}" style="--duration: .6s; --delay: .6s">
              {% if section.blocks[0].settings.description -%}
                <div class="s-header__desc text-block hide-empty {{ description_class }}">{{- section.blocks[0].settings.description -}}</div>
              {%- endif %}
                <div class="s-header__buttons d-inline-flex gap-12 gap-md-16 fw-wrap hide-empty {% if content_align contains 'ta-center' %}center-xs{% endif %}">
                  {%- capture s-buttons -%}
                    {%- if section.blocks[0].settings.primary_button_label != blank -%}
                      <a class="btn btn-large btn-primary" href="{{- section.blocks[0].settings.primary_button_link | default: '#' -}}">{{- section.blocks[0].settings.primary_button_label -}}</a>
                    {%- endif -%}
                    {%- if section.blocks[0].settings.secondary_button_label != blank -%}
                      <a class="btn btn-large btn-secondary" href="{{- section.blocks[0].settings.secondary_button_link | default: '#' -}}">{{- section.blocks[0].settings.secondary_button_label -}}</a>
                    {%- endif -%}
                  {%- endcapture -%}
                  {{- s-buttons -}}
                </div>
            </div>
          </div>
          <div class="s-header-buttons d-inline-flex gap-12 gap-md-16 fw-wrap hide-empty end-md {% if min_height_desktop != "30" %}d-none-important{% endif %}" style="--w-md:4">
            {{- s-buttons -}}
          </div>
        </div>
      {%- endunless -%}
    </div>
  </div>
</div>
{% schema %}
{
  "name": "t:sections.image_banner.name",
  "disabled_on": {
    "groups": [
      "header",
      "footer"
    ]
  },
  "settings": [
    {
      "type": "header",
      "content": "t:general.settings.headers.header_general.content"
    },
    {
      "type": "checkbox",
      "id": "enable_large_heading",
      "label": "t:general.settings.enable_large_heading.label",
      "info": "t:general.settings.enable_large_heading.info",
      "default": false
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:general.settings.color_scheme.label",
      "default": "scheme-1"
    },
    {
      "type": "range",
      "unit": "%",
      "max": 90,
      "min": 0,
      "step": 1,
      "default": 30,
      "id": "section_overlay_opacity",
      "label": "t:general.settings.overlay_opacity.label"
    },
    {
      "type": "color",
      "id": "section_mask_overlay_color",
      "label": "t:general.settings.mask_overlay.label",
      "info": "t:general.settings.banner_mask_overlay.info",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "section_content_overlay_color",
      "label": "t:general.settings.content_overlay.label",
      "info": "t:general.settings.banner_content_overlay.info",
      "default": "#FFFFFF"
    },
    {
      "type": "header",
      "content": "t:general.settings.headers.header_layout.content"
    },
    {
      "type": "select",
      "label": "t:general.settings.section_height_on_large_screen.label",
      "info": "t:general.settings.section_height.info",
      "id": "height_desktop",
      "options": [
        {
          "value": "auto",
          "label": "t:general.settings.height.options.adapt_to_content.label"
        },
        {
          "value": "30",
          "label": "t:general.settings.height.options.option_30.label"
        },
        {
          "value": "50",
          "label": "t:general.settings.height.options.option_50.label"
        },
        {
          "value": "70",
          "label": "t:general.settings.height.options.option_70.label"
        },
        {
          "value": "100",
          "label": "t:general.settings.height.options.fill_screen_height.label"
        },
        {
          "value": "adapt_img",
          "label": "t:general.settings.image_ratio.options.option_adapt.label"
        }
      ],
      "default": "70"
    },
    {
      "type": "select",
      "label": "t:general.settings.section_height_on_small_screen.label",
      "info": "t:general.settings.section_height.info",
      "id": "height_mobile",
      "options": [
        {
          "value": "auto",
          "label": "t:general.settings.height.options.adapt_to_content.label"
        },
        {
          "value": "50",
          "label": "t:general.settings.height.options.option_50.label"
        },
        {
          "value": "70",
          "label": "t:general.settings.height.options.option_70.label"
        },
        {
          "value": "100",
          "label": "t:general.settings.height.options.fill_screen_height.label"
        },
        {
          "value": "adapt_img",
          "label": "t:general.settings.image_ratio.options.option_adapt.label"
        }
      ],
      "default": "70"
    },
    {
      "type": "header",
      "content": "t:general.settings.headers.header_image.content"
    },
    {
      "type": "image_picker",
      "label": "t:general.settings.desktop_background_image.label",
      "id": "desktop_background_image",
      "info": "t:general.settings.image_recommend.info"
    },
    {
      "type": "image_picker",
      "label": "t:general.settings.mobile_background_image.label",
      "id": "mobile_background_image",
      "info": "t:general.settings.image_recommend_mobile.info"
    },
    {
      "type": "header",
      "content": "t:general.settings.headers.header_prominent_badge.content"
    },
    {
      "type": "text",
      "id": "badge_text",
      "label": "t:general.settings.text.label",
      "info": "t:general.settings.prominent_badge.text.info"
    },
    {
      "type": "select",
      "id": "badge_color",
      "label": "t:general.settings.accent_scheme.label",
      "default": "color-accent-1",
      "options": [
        {
          "value": "color-accent-1",
          "label": "t:general.settings.main.label"
        },
        {
          "value": "color-accent-2",
          "label": "t:general.settings.extra.label"
        }
      ]
    },
    {
      "type": "select",
      "id": "badge_position",
      "label": "t:general.settings.badge_position.label",
      "default": "p-badge--top-right",
      "options": [
        {
          "value": "p-badge--top-left",
          "label": "t:general.settings.option_left.label"
        },
        {
          "value": "p-badge--top-right",
          "label": "t:general.settings.option_right.label"
        }
      ]
    },
    {
      "type": "select",
      "id": "badge_shape",
      "label": "t:general.settings.badge_shape.label",
      "default": "badge--star",
      "options": [
        {
          "value": "badge--star",
          "label": "t:general.settings.badge_shape.options.option_star.label"
        },
        {
          "value": "badge--diamond",
          "label": "t:general.settings.badge_shape.options.option_diamond.label"
        },
        {
          "value": "badge--asterisk",
          "label": "t:general.settings.badge_shape.options.option_asterisk.label"
        }
      ]
    }
  ],
  "blocks": [
    {
      "type": "content",
      "name": "t:general.settings.headers.header_content.content",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "label": "t:general.settings.content_position.label",
          "id": "content_position",
          "options": [
            {
              "value": "center-xs middle-xs ta-center",
              "label": "t:general.settings.option_center.label"
            },
            {
              "value": "center-xs top-xs ta-left",
              "label": "t:general.settings.content_position.options.option_left_center.label"
            },
            {
              "value": "end-xs top-xs ta-left content_position",
              "label": "t:general.settings.content_position.options.option_bottom_left.label"
            }
          ],
          "default": "center-xs middle-xs ta-center"
        },
        {
          "type": "header",
          "content": "t:general.settings.headers.header_text.content"
        },
        {
          "type": "text",
          "label": "t:general.settings.subheading.label",
          "id": "subheading",
          "default": "Highlight text"
        },
        {
          "type": "text",
          "label": "t:general.settings.heading.label",
          "id": "heading",
          "default": "Image banner"
        },
        {
          "type": "richtext",
          "label": "t:general.settings.description.label",
          "id": "description",
          "default": "<p>Use this text to share brand information with your customers. Introduce a new product, announce an announcement or welcome customers.</p>"
        },
        {
          "type": "header",
          "content": "t:general.settings.headers.header_buttons.content"
        },
        {
          "type": "text",
          "id": "primary_button_label",
          "label": "t:general.settings.primary_button_label.label",
          "info": "t:general.settings.hide_if_empty.info",
          "default": "Button label"
        },
        {
          "type": "url",
          "id": "primary_button_link",
          "label": "t:general.settings.primary_button_link.label"
        },
        {
          "type": "text",
          "id": "secondary_button_label",
          "label": "t:general.settings.secondary_button_label.label",
          "info": "t:general.settings.hide_if_empty.info",
          "default": "Button label"
        },
        {
          "type": "url",
          "id": "secondary_button_link",
          "label": "t:general.settings.secondary_button_link.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.image_banner.name",
      "blocks": [
        {
          "type": "content"
        }
      ]
    }
  ]
}
{% endschema %}